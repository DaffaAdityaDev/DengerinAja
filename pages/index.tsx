import Head from 'next/head'
import Image from 'next/image'
import Link from 'next/link'
import React, { useState, useRef, useEffect, RefObject, Ref } from 'react'

import AudioPlayer from '../components/AudioPlayer/AudioPlayer'
import Radio from '../components/Radio/Radio'

import radioData from '../data/Radio/Radio_data.json'

import PlaylistPropsType from "../types/PlaylistPropsType";
import IsPlayingType from '../types/IsplayingType'
import RadioContainer from '../layout/RadioContainer/RadioContainer'

export default function Home({ currentPlay, setCurrentPlay, currentData, setCurrentData, audioRef } : {
  currentPlay: number, setCurrentPlay: React.Dispatch<React.SetStateAction<number>>,
  currentData: PlaylistPropsType[], setCurrentData: React.Dispatch<React.SetStateAction<PlaylistPropsType[]>>,
  audioRef: React.MutableRefObject<HTMLAudioElement>
}) {
  // const [currentPlay, setCurrentPlay] = useState<number>(0);
  // const [currentData , setCurrentData] = useState<PlaylistPropsType[]>(radioData.data);
  const [isPlaying, setIsPlaying] = useState<any[]>([]);
  // const audioRef = useRef() as React.MutableRefObject<HTMLAudioElement>;
  // const sliderRef = useRef() as React.MutableRefObject<HTMLInputElement>;


  useEffect(() => {
      fillIsPlaying();
  }, [])

  function fillIsPlaying() {
    let arr = [];
    for(let i = 0; i < currentData.length; i++) {
      arr.push({id: currentData[i].id, isPlaying: false});
    }
    
    setIsPlaying(arr);
  }

  function addData() {
    let arr = [];
    for(let i = 0; i < 4; i++) {
      arr.push({id: currentData.length + i, album: "test", artist: "test", url: "test"})
    }
    setCurrentData([...currentData, ...arr]);
  }


  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      
      <main> 
        <RadioContainer>
          {currentData.map((item, index) => (
            <Radio data={item} setCurrentData={setCurrentData} key={index}
            currentPlay={currentPlay} setCurrentPlay={setCurrentPlay} 
            forwardedRef={audioRef} isPlaying={isPlaying} setIsPlaying={setIsPlaying}/>
          ))}
        </RadioContainer>
        <button onClick={e=> addData()}>ADd Data</button>
      </main>
    </div>
  )
}
