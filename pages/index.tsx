import Head from 'next/head'
import Image from 'next/image'
import Link from 'next/link'
import React, { useState, useRef, useEffect, RefObject, Ref } from 'react'

import AudioPlayer from '../components/AudioPlayer/AudioPlayer'
import Radio from '../components/Radio/Radio'

import RadioData from '../data/Radio/Radio_data.json'
// import PlaylistPop from '../data/Playlist/pop/Playlist_pop.json'

import PlaylistPropsType from "../types/PlaylistPropsType";
import IsPlayingType from '../types/IsplayingType'
import RadioContainer from '../layout/RadioContainer/RadioContainer'
import RadioBox from '../components/RadioBox/RadioBox'

export default function Home({ currentPlay, setCurrentPlay, currentData, setCurrentData, audioRef } : {
  currentPlay: number, setCurrentPlay: React.Dispatch<React.SetStateAction<number>>,
  currentData: PlaylistPropsType[], setCurrentData: React.Dispatch<React.SetStateAction<PlaylistPropsType[]>>,
  audioRef: React.MutableRefObject<HTMLAudioElement>
}) {

  // const [playlistPop, setPlaylistPop] = useState<PlaylistPropsType[]>(PlaylistPop.data);
  

  // useEffect(() => {
  //     fillIsPlaying();
  // }, [])

  // function fillIsPlaying() {
  //   let arr = [];
  //   for(let i = 0; i < currentData.length; i++) {
  //     arr.push({id: currentData[i].id, isPlaying: false});
  //   }
    
  //   setIsPlaying(arr);
  // }

  // function addData() {
  //   let arr = [];
  //   for(let i = 0; i < 4; i++) {
  //     arr.push({id: currentData.length + i, album: "test", artist: "test", url: "test"})
  //   }
  //   setCurrentData([...currentData, ...arr]);
  // }

  // console.log(currentData current)
  // function changeData() {
  //   setCurrentData(playlistPop);
  //   setCurrentPlay(0);
  // }

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      
      <main> 
        {/* <button onClick={() => changeData()}>change</button> */}
        {/* <RadioContainer>
          {currentData.map((item, index) => (
            <Radio data={item} setCurrentData={setCurrentData} key={index}
            currentPlay={currentPlay} setCurrentPlay={setCurrentPlay} 
            forwardedRef={audioRef} isPlaying={isPlaying} setIsPlaying={setIsPlaying}
            type="long"/>
          ))}
        </RadioContainer> */}
        {currentData.map((item, index) => {
          return (
            <Radio data={item} setCurrentData={setCurrentData} key={index}
            currentPlay={currentPlay} setCurrentPlay={setCurrentPlay} 
            forwardedRef={audioRef} type="long"/>
          )
        })}
        {/* {playlistPop.map((item, index) => {
          return (
            <Radio data={item} setCurrentData={setCurrentData} key={index}
            currentPlay={currentPlay} setCurrentPlay={setCurrentPlay} 
            forwardedRef={audioRef} isPlaying={isPlaying} setIsPlaying={setIsPlaying}
            type="long"/>
          )
        })}
        {playlistPop.map((item, index) => {
          return (
            <Radio data={item} setCurrentData={setCurrentData} key={index}
            currentPlay={currentPlay} setCurrentPlay={setCurrentPlay} 
            forwardedRef={audioRef} isPlaying={isPlaying} setIsPlaying={setIsPlaying}
            type="long"/>
          )
        })} */}
      </main>
    </div>
  )
}
